import{k as l,P as h,V as g,l as f,f as w,j as d}from"./index-17f5801a.js";import{t as u,p as n}from"./jsonUtils-8a80628b.js";import{d as V}from"./FeatureSet-4e0171b9.js";import{m as b,u as S}from"./LayerView-ec2c2565.js";import{i as _}from"./GraphicContainer-a8fa3b1b.js";import{r as T}from"./GraphicsView2D-13bcd2b8.js";import"./UniqueValueRenderer-97820cbb.js";import"./LegendOptions-2334a895.js";import"./diffUtils-6c9afbf1.js";import"./SizeVariable-b848ae53.js";import"./colorRamps-89517de6.js";import"./ColorStop-efe07ef9.js";import"./jsonUtils-0dadc667.js";import"./styleUtils-d2b98714.js";import"./DictionaryLoader-8ab98d36.js";import"./LRUCache-65a1a7c7.js";import"./FieldsIndex-b50dd53d.js";import"./UnknownTimeZone-29b2edce.js";import"./heatmapUtils-eb599eda.js";import"./vec4f64-3c9d0901.js";import"./Field-d94e0e84.js";import"./fieldType-59772d91.js";import"./scaleUtils-f904dc53.js";import"./Container-7d5626df.js";import"./definitions-4b4d3bb7.js";import"./enums-bdecffa2.js";import"./Texture-a719e912.js";import"./color-a0e5bbb3.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-6f559a1a.js";import"./FeatureContainer-d7b2a42e.js";import"./AttributeStoreView-98b68c3a.js";import"./TiledDisplayObject-a64f6237.js";import"./labelingInfo-23d6e286.js";import"./LabelClass-3d0bd3e4.js";import"./labelUtils-7504045c.js";import"./defaultsJSON-b087dd4d.js";import"./WGLContainer-cfa928c9.js";import"./FramebufferObject-ec3a2f1c.js";import"./ProgramTemplate-6030136e.js";import"./GeometryUtils-656a25af.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-ac984003.js";import"./featureConversionUtils-3ca44a73.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-54d3173d.js";import"./ExpandedCIM-649a170a.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-fbfb0ca5.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-e1d75a2b.js";import"./floatRGBA-682b09fa.js";import"./clusterUtils-14e668da.js";import"./MD5-715f37cd.js";import"./util-729b06cc.js";import"./TileContainer-8d4f6d4a.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-308b076e.js";import"./projectionSupport-387978e5.js";import"./json-48e3ea08.js";import"./Matcher-8da462a7.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-8e719e67.js";import"./ComputedAttributeStorage-1246f330.js";import"./TimeOnly-f8696a66.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,o){if(!this.graphicsViews.length)return null;const e=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const t=this._popupTemplates.get(r),s=r.hitTest(i);for(const p of s)p.layer=e,p.sourceLayer=e,p.popupTemplate=t;return s}).map(r=>({type:"graphic",graphic:r,layer:e,mapPoint:i}))}update(i){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(i)}attach(){this.addAttachHandles([l(()=>{var i;return(i=this.layer)==null?void 0:i.featureCollections},i=>{this._clear();for(const{popupInfo:o,featureSet:e,layerDefinition:r}of i){const t=V.fromJSON(e),s=new g(t.features),p=r.drawingInfo,c=o?f.fromJSON(o):null,m=u(p.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:m,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=a,this._popupTemplates.set(a,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=m.symbol):this.layer.lineSymbol=m.symbol:this.layer.polygonSymbol=m.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.polygonSymbol},i=>{this._graphicsViewMap.polygon.renderer=new n({symbol:i})},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.lineSymbol},i=>{this._graphicsViewMap.polyline.renderer=new n({symbol:i})},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.pointSymbol},i=>{this._graphicsViewMap.point.renderer=new n({symbol:i})},h)])}detach(){this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Oi=y;export{Oi as default};
