import{k as l,P as h,V as g,l as f,f as w,j as d}from"./index-dfe4d42d.js";import{t as u,p as n}from"./jsonUtils-cb29184a.js";import{d as V}from"./FeatureSet-ff2e6894.js";import{m as b,u as S}from"./LayerView-c684256d.js";import{i as _}from"./GraphicContainer-42132332.js";import{r as T}from"./GraphicsView2D-cdfcd37b.js";import"./UniqueValueRenderer-1ec4ce17.js";import"./LegendOptions-9dd9bdee.js";import"./diffUtils-bbf5ba7d.js";import"./SizeVariable-aba63b8a.js";import"./colorRamps-c95c47a3.js";import"./ColorStop-1ea4e9e4.js";import"./jsonUtils-f13e839b.js";import"./styleUtils-1f283fd1.js";import"./DictionaryLoader-7e1ef82a.js";import"./LRUCache-c11c9d99.js";import"./FieldsIndex-c919e639.js";import"./UnknownTimeZone-03c79817.js";import"./heatmapUtils-339dd66a.js";import"./vec4f64-3c9d0901.js";import"./Field-640b3afc.js";import"./fieldType-3ccc5c40.js";import"./scaleUtils-fb4f3919.js";import"./Container-17b68520.js";import"./definitions-5574f3b3.js";import"./enums-bdecffa2.js";import"./Texture-f95d4e25.js";import"./color-628a0e8f.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-823f9ac8.js";import"./FeatureContainer-5bb38090.js";import"./AttributeStoreView-45d33124.js";import"./TiledDisplayObject-fe67ecec.js";import"./labelingInfo-d5ce8c46.js";import"./LabelClass-ee8ff0ef.js";import"./labelUtils-a50f3602.js";import"./defaultsJSON-b087dd4d.js";import"./WGLContainer-63e30817.js";import"./FramebufferObject-11d118ad.js";import"./ProgramTemplate-b90e7b4c.js";import"./GeometryUtils-40616d63.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-9c20e96e.js";import"./featureConversionUtils-17f64791.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-d034d8c8.js";import"./ExpandedCIM-4553bdd3.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-9a8de973.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-3746adc8.js";import"./floatRGBA-d8066688.js";import"./clusterUtils-bc690dd1.js";import"./MD5-715f37cd.js";import"./util-7d7d5193.js";import"./TileContainer-6839f28c.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-5fb0fa6f.js";import"./projectionSupport-0821404a.js";import"./json-48e3ea08.js";import"./Matcher-5b864048.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-5db9284f.js";import"./ComputedAttributeStorage-7fd5c211.js";import"./TimeOnly-a22a1873.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,o){if(!this.graphicsViews.length)return null;const e=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const t=this._popupTemplates.get(r),s=r.hitTest(i);for(const p of s)p.layer=e,p.sourceLayer=e,p.popupTemplate=t;return s}).map(r=>({type:"graphic",graphic:r,layer:e,mapPoint:i}))}update(i){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(i)}attach(){this.addAttachHandles([l(()=>{var i;return(i=this.layer)==null?void 0:i.featureCollections},i=>{this._clear();for(const{popupInfo:o,featureSet:e,layerDefinition:r}of i){const t=V.fromJSON(e),s=new g(t.features),p=r.drawingInfo,c=o?f.fromJSON(o):null,m=u(p.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:m,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=a,this._popupTemplates.set(a,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=m.symbol):this.layer.lineSymbol=m.symbol:this.layer.polygonSymbol=m.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.polygonSymbol},i=>{this._graphicsViewMap.polygon.renderer=new n({symbol:i})},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.lineSymbol},i=>{this._graphicsViewMap.polyline.renderer=new n({symbol:i})},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.pointSymbol},i=>{this._graphicsViewMap.point.renderer=new n({symbol:i})},h)])}detach(){this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Oi=y;export{Oi as default};
