import{F as n,N as v,_ as y,c$ as c,bD as p,d0 as b,cc as l}from"./index-8edf265f.js";import{e as w}from"./LRUCache-c7a923e7.js";let s=f();function f(){return new w(50)}function x(){s=f()}async function B(r,o){var i,t;if((i=r.resource)!=null&&i.href)return _(r.resource.href).then(e=>[e.width,e.height]);if((t=r.resource)!=null&&t.primitive)return o!=null?[o,o]:[256,256];throw new n("symbol3d:invalid-symbol-layer","symbol layers of type Icon must have either an href or a primitive resource")}function _(r){return v(r,{responseType:"image"}).then(o=>o.data)}async function $(r,o=null){var t;if(!r.isPrimitive){const e=r.resource.href;if(!e)throw new n("symbol:invalid-resource","The symbol does not have a valid resource");const a=s.get(e);if(a!==void 0)return a;const{fetch:h}=await y(()=>import("./objectResourceUtils-3e00cc2b.js").then(d=>d.o),["assets/objectResourceUtils-3e00cc2b.js","assets/devEnvironmentUtils-4eab2a99.js","assets/index-8edf265f.js","assets/mat3f64-221ce671.js","assets/mat4f64-1413b4a7.js","assets/BufferView-fd18ede8.js","assets/vec32-3a2725b2.js","assets/DefaultMaterial_COLOR_GAMMA-550ba654.js","assets/enums-bdecffa2.js","assets/DictionaryLoader-7ed264e8.js","assets/LRUCache-c7a923e7.js","assets/FieldsIndex-3d8128c0.js","assets/UnknownTimeZone-d5028e24.js","assets/quat-ec8cad3d.js","assets/quatf64-3363c48e.js","assets/resourceUtils-53397a96.js","assets/basicInterfaces-11f56cb3.js","assets/Indices-ed33a78b.js","assets/vec4f64-3c9d0901.js","assets/NestedMap-1b5db22e.js","assets/requestImageUtils-6312ca62.js","assets/triangle-d118718f.js","assets/sphere-1b3fc8c2.js","assets/ByteSizeUnit-d4757d40.js","assets/lineSegment-f6f85dc8.js","assets/VertexAttribute-0e674613.js","assets/Texture-f675116c.js","assets/InterleavedLayout-c63747de.js","assets/types-1305598a.js","assets/OrderIndependentTransparency-6ae10952.js","assets/orientedBoundingBox-67853eb1.js","assets/plane-e47fa5dc.js","assets/doublePrecisionUtils-e3c3d0d8.js","assets/FramebufferObject-d5b7affd.js","assets/RenderState-1d6218ee.js"]),m=await h(e,{disableTextures:!0}),u=c(m.referenceBoundingBox,l());return s.put(e,u),u}if(!((t=r.resource)!=null&&t.primitive))throw new n("symbol:invalid-resource","The symbol does not have a valid resource");const i=p(b(r.resource.primitive));if(o!=null)for(let e=0;e<i.length;e++)i[e]*=o;return c(i,l())}export{x as clearBoundingBoxCache,B as computeIconLayerResourceSize,$ as computeObjectLayerResourceSize};
