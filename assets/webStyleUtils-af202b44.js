import{c as u,a as b}from"./devEnvironmentUtils-4eab2a99.js";import{F as m,a$ as l,b4 as f,I as p,bV as w}from"./index-dfe4d42d.js";import{c as d,w as h,b as i,p as c,d as $}from"./styleUtils-1f283fd1.js";import{getStyleItemFromStyle as g}from"./webStyleSymbolUtils-529f0c73.js";import"./jsonUtils-f13e839b.js";async function R(e,a,t){if(!e.name)throw new m("style-symbol-reference-name-missing","Missing name in style symbol reference");if(e.styleName&&e.styleName==="Esri2DPointSymbolsStyle")return S(e,t);try{return N(await d(e,a,t),e.name,a,t)}catch(n){return l(n),null}}async function S(e,a){const t=h.replaceAll(/\{SymbolName\}/gi,e.name);try{const n=await i(t,a);return c(n.data)}catch(n){return l(n),null}}async function N(e,a,t,n){const y={portal:(t==null?void 0:t.portal)!=null?t.portal:f.getDefault(),url:p(e.baseUrl),origin:"portal-item"},s=g(a,e.data);if(!s)throw new m("symbolstyleutils:symbol-name-not-found",`The symbol name '${a}' could not be found`,{symbolName:a});let r=w($(s,"cimRef"),y);u()&&(r=b(r));try{const o=await i(r,n);return c(o.data)}catch(o){return l(o),null}}export{R as fetchCIMSymbolReference};
